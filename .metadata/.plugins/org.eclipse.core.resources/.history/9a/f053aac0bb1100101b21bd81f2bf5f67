package com.example.samuraitravel.controller;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

import com.example.samuraitravel.entity.House;
import com.example.samuraitravel.entity.Reviews;
import com.example.samuraitravel.entity.User;
import com.example.samuraitravel.form.ReviewsForm;
import com.example.samuraitravel.repository.HouseRepository;
import com.example.samuraitravel.repository.ReviewsRepository;
import com.example.samuraitravel.repository.UserRepository;
import com.example.samuraitravel.service.ReviewService;

@Controller
public class ReviewController {

	@Autowired
	private ReviewService reviewService;

	@Autowired
	private HouseRepository houseRepository;

	@Autowired
	private ReviewsRepository reviewsRepository;

	@Autowired
	private UserRepository userRepository;

	@PostMapping("/houses/{houseId}/reviews/register")
	public void createReview(@RequestBody @Validated ReviewsForm reviewsForm) {
		reviewService.createReviews(reviewsForm);
	}

	@GetMapping("/houses/{houseId}/reviews/register")
	public String reviewsForm(@PathVariable("houseId") Integer houseId, Model model) {
		House house = houseRepository.findById(houseId).orElse(null);
		if (house != null) {
			model.addAttribute("house", house);
			return "houses/reviewsform";
		} else {
			return "redirect:/houses";
		}
	}

	@GetMapping("/houses/{houseId}/reviews")
	public String showReviews(@PathVariable("houseId") LocalDateTime houseId, Model model) {
		List<Reviews> reviews = reviewsRepository.findTop6ByHouseIdAtOrderByCreatedAtDesc(houseId);

		// 各レビューに対応する User エンティティを取得し、レビューオブジェクトに設定
		reviews.forEach(review -> {
			User user = userRepository.findById(review.getUserId()).orElse(null);
			review.setUser(user);
		});

		model.addAttribute("reviews", reviews);
		return "reviews/show"; // レビューを表示するビューのパス
	}
}